
Create the vectors
(a) (2, 3, … , 29, 30)
> a1<-seq(2,30,1)
> a1
 [1]  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
[23] 24 25 26 27 28 29 30

(b) (30, 29, … , 2)
> a2<-seq(30,2,-1)
> a2
 [1] 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10  9
[23]  8  7  6  5  4  3  2

(c) (1, 2, 3, …. , 29, 30, 29, 28, , 2, 1)
a3<-c(seq(1:30),seq(29,1,-1))
> a3
 [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22
[23] 23 24 25 26 27 28 29 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16
[45] 15 14 13 12 11 10  9  8  7  6  5  4  3  2  1

(d) (4, 6, 3) and assign it to the name dev.
> dev<-c(4,6,3)
> class(dev)
[1] "numeric"
> dev
[1] 4 6 3

(e) (5, 6, 7, 5, 6, 7, , 5, 6, 7) where there are 10 occurrences of 5.
> e<-rep(5:7,10)
> e
 [1] 5 6 7 5 6 7 5 6 7 5 6 7 5 6 7 5 6 7 5 6 7 5 6 7 5 6 7 5 6 7
 
(f) (5, 6, 7, 5, 6, 7, , 5, 6, 7, 5) where there are 11 occurrences of 5, 10 occurrences of 6 and 10 occurrences of 7.
> f<-c(e,5)
> f
 [1] 5 6 7 5 6 7 5 6 7 5 6 7 5 6 7 5 6 7 5 6 7 5 6 7 5 6 7 5 6 7 5
 
(g) (4, 4, , 4, 6, 6, , 6, 3, 3, , 3) where there are 10 occurrences of 4, 20 occurrences of 6 and 30 occurrences of 3.
> g<-(c(rep(4,each=10),rep(6,each=20),rep(3,each=30)))
> g
 [1] 4 4 4 4 4 4 4 4 4 4 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 3 3 3
[34] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
 
2. Create a vector of the values of eX sin(x) at x = 3, 3.1, 3.2, , 6.
x<-seq(3,6,0.1)
> x
 [1] 3.0 3.1 3.2 3.3 3.4 3.5 3.6 3.7 3.8 3.9 4.0 4.1 4.2 4.3 4.4 4.5
[17] 4.6 4.7 4.8 4.9 5.0 5.1 5.2 5.3 5.4 5.5 5.6 5.7 5.8 5.9 6.0
eX<-sin(x)
> eX
 [1]  0.14112001  0.04158066 -0.05837414 -0.15774569 -0.25554110
 [6] -0.35078323 -0.44252044 -0.52983614 -0.61185789 -0.68776616
[11] -0.75680250 -0.81827711 -0.87157577 -0.91616594 -0.95160207
[16] -0.97753012 -0.99369100 -0.99992326 -0.99616461 -0.98245261
[21] -0.95892427 -0.92581468 -0.88345466 -0.83226744 -0.77276449
[26] -0.70554033 -0.63126664 -0.55068554 -0.46460218 -0.37387666
[31] -0.27941550

3.> x<-sample(0:999, 250, replace=T)
> x
  [1] 307 257 552  56 468 483 812 370 546 170 624 882 280 398 762 669
 [17] 204 357 359 690 535 710 538 748 420 171 770 881 549 277 488 928
 [33] 348 954 695 889 180 629 989 130 330 865 777 827 603 491 780 884
 [49] 207 307 330 198 235 274 591 253 123 229 597 211 463 647 960 676
 [65] 445 357 455 445 245 694 412 327 572 966 661 624 856 774 834  91
 [81] 459 599 919 982  37 577 733 248 300 733 906 209 358 448 906 389
 [97] 517 125  30 771 327 389  41 361 570 684 971 701  11 535 836 806
[113]  80 238 965  37 916 726 200 840 396 392 472 583 352  28 995 957
[129] 551 101 237 860 738 497 579  16 472  42 463 629 673  87 143 908
[145] 122 728 950  43  19 199 505 926 138 169 606 815 843 788  19 698
[161] 815 568 480 161  89 162  26 709 761 857 437 417 585 824 793 326
[177] 957 653 458 606 288 717 923 674 185 348 123 108 297 838 992 437
[193] 202 963 660 298 119 599 120 788 369 956 913 823 319 877 800 611
[209]  72 421 344 751 218 292 355 631 892 744 457  36 568 439 600 951
[225] 269 658  76  71 370 297 551 369 845 620 399 299 381 701 946 772
[241] 219 716 664 706 279 712 660  41  61 279

> y<-sample(0:999, 250, replace=T)
> y
  [1] 301 956 389 371 843 847 319 132 617 791 338 905 197 794 754 911
 [17] 322  86 911 955 671 744 440 115 675 731 483 171 675 262 341 210
 [33]  16 376 562 679 745 950 163 324 132 637 330 649 302  71 662 759
 [49] 553 539 849 653 950 617 492 976 490 655 598 947 368 878 454 496
 [65] 460 617 604 785 555 768 404 510 523 992 429 996 786 515 502 911
 [81] 264 173 400 538 244 375 580 208 801 638 736 438 579 256 463 168
 [97] 613 958 478 751  20 170 639 164 354 186 897 237 984  21 107 244
[113] 722  32 549 682 300 388 732 962 760 581 462 356 383 205 138 389
[129] 266 703 407 265 400 197 829 527 395 573 970 650 333 331 942 381
[145] 564 511 138 239 718 297 511 277 360 437 803 520 696 847 845 391
[161] 153 639 287 928 155 963   1 707 630 773 892 511 749 926  91 496
[177] 197 994  36 217 890 118 369 162 166 972 810 953 399 852  64 302
[193] 490 646 510 797 565 353 659 239 265 518 737 779 114 612 910 634
[209] 274 352 670 906 730 919 382 854  54 253 367 360 280 388 348 278
[225] 801 995 753 603 593 582 238 454 995  82  51 493  53 950 633 269
[241] 996 358 371 330 104 579 333   3 994 369

(a) Identify out the values in y which are > 500.
y2=y[y>500]
> y2
  [1] 956 843 847 617 791 905 794 754 911 911 955 671 744 675 731 675
 [17] 562 679 745 950 637 649 662 759 553 539 849 653 950 617 976 655
 [33] 598 947 878 617 604 785 555 768 510 523 992 996 786 515 502 911
 [49] 538 580 801 638 736 579 613 958 751 639 897 984 722 549 682 732
 [65] 962 760 581 703 829 527 573 970 650 942 564 511 718 511 803 520
 [81] 696 847 845 639 928 963 707 630 773 892 511 749 926 994 890 972
 [97] 810 953 852 646 510 797 565 659 518 737 779 612 910 634 670 906
[113] 730 919 854 801 995 753 603 593 582 995 950 633 996 579 994

(b) Identify the index positions in y of the values which are > 700?
> y1<-which(y>700)
> y1
 [1]   2   5   6  10  12  14  15  16  19  20  22  26  37  38  48  51
[17]  53  56  60  62  68  70  74  76  77  80  89  91  98 100 107 109
[33] 113 119 120 121 130 135 139 143 149 155 158 159 164 166 168 170
[49] 171 173 174 178 181 186 187 188 190 196 203 204 207 212 213 214
[65] 216 225 226 227 233 238 241 249


(d) How many values in y are within 200 of the maximum value of the terms in y?
> yter<-y[y<=200]
> yter
 [1] 132 197  86 115 171  16 163 132  71 173 168  20 170 164 186  21
[17] 107  32 138 197 138 153 155   1  91 197  36 118 162 166  64 114
[33]  54  82  51  53 104   3

e) How many numbers in x are divisible by 2?

> xdiv<-ifelse(x%%2==0,"Y","N")
> xdiv
  [1] "N" "N" "Y" "Y" "Y" "N" "Y" "Y" "Y" "Y" "Y" "Y" "Y" "Y" "Y" "N"
 [17] "Y" "N" "N" "Y" "N" "Y" "Y" "Y" "Y" "N" "Y" "N" "N" "N" "Y" "Y"
 [33] "Y" "Y" "N" "N" "Y" "N" "N" "Y" "Y" "N" "N" "N" "N" "N" "Y" "Y"
 [49] "N" "N" "Y" "Y" "N" "Y" "N" "N" "N" "N" "N" "N" "N" "N" "Y" "Y"
 [65] "N" "N" "N" "N" "N" "Y" "Y" "N" "Y" "Y" "N" "Y" "Y" "Y" "Y" "N"
 [81] "N" "N" "N" "Y" "N" "N" "N" "Y" "Y" "N" "Y" "N" "Y" "Y" "Y" "N"
 [97] "N" "N" "Y" "N" "N" "N" "N" "N" "Y" "Y" "N" "N" "N" "N" "Y" "Y"
[113] "Y" "Y" "N" "N" "Y" "Y" "Y" "Y" "Y" "Y" "Y" "N" "Y" "Y" "N" "N"
[129] "N" "N" "N" "Y" "Y" "N" "N" "Y" "Y" "Y" "N" "N" "N" "N" "N" "Y"
[145] "Y" "Y" "Y" "N" "N" "N" "N" "Y" "Y" "N" "Y" "N" "N" "Y" "N" "Y"
[161] "N" "Y" "Y" "N" "N" "Y" "Y" "N" "N" "N" "N" "N" "N" "Y" "N" "Y"
[177] "N" "N" "Y" "Y" "Y" "N" "N" "Y" "N" "Y" "N" "Y" "N" "Y" "Y" "N"
[193] "Y" "N" "Y" "Y" "N" "N" "Y" "Y" "N" "Y" "N" "N" "N" "N" "Y" "N"
[209] "Y" "N" "Y" "N" "Y" "Y" "N" "N" "Y" "Y" "N" "Y" "Y" "N" "Y" "N"
[225] "N" "Y" "Y" "N" "Y" "N" "N" "N" "N" "Y" "N" "N" "N" "N" "Y" "Y"
[241] "N" "Y" "Y" "Y" "N" "Y" "Y" "N" "N" "N"
> xnum<-grep("Y",xdiv)
> xnum
  [1]   3   4   5   7   8   9  10  11  12  13  14  15  17  20  22  23
 [17]  24  25  27  31  32  33  34  37  40  41  47  48  51  52  54  63
 [33]  64  70  71  73  74  76  77  78  79  84  88  89  91  93  94  95
 [49]  99 105 106 111 112 113 114 117 118 119 120 121 122 123 125 126
 [65] 132 133 136 137 138 144 145 146 147 152 153 155 158 160 162 163
 [81] 166 167 174 176 179 180 181 184 186 188 190 191 193 195 196 199
 [97] 200 202 207 209 211 213 214 217 218 220 221 223 226 227 229 234
[113] 239 240 242 243 244 246 247
> xlen<-length(xnum)
> xlen
[1] 119

(f) Sort the numbers in the vector x in the order of increasing values in y.

> xsort<-sort(x)
> xsort
  [1]  11  16  19  19  26  28  30  36  37  37  41  41  42  43  56  61
 [17]  71  72  76  80  87  89  91 101 108 119 120 122 123 123 125 130
 [33] 138 143 161 162 169 170 171 180 185 198 199 200 202 204 207 209
 [49] 211 218 219 229 235 237 238 245 248 253 257 269 274 277 279 279
 [65] 280 288 292 297 297 298 299 300 307 307 319 326 327 327 330 330
 [81] 344 348 348 352 355 357 357 358 359 361 369 369 370 370 381 389
 [97] 389 392 396 398 399 412 417 420 421 437 437 439 445 445 448 455
[113] 457 458 459 463 463 468 472 472 480 483 488 491 497 505 517 535
[129] 535 538 546 549 551 551 552 568 568 570 572 577 579 583 585 591
[145] 597 599 599 600 603 606 606 611 620 624 624 629 629 631 647 653
[161] 658 660 660 661 664 669 673 674 676 684 690 694 695 698 701 701
[177] 706 709 710 712 716 717 726 728 733 733 738 744 748 751 761 762
[193] 770 771 772 774 777 780 788 788 793 800 806 812 815 815 823 824
[209] 827 834 836 838 840 843 845 856 857 860 865 877 881 882 884 889
[225] 892 906 906 908 913 916 919 923 926 928 946 950 951 954 956 957
[241] 957 960 963 965 966 971 982 989 992 995

4. Use the function paste to create the following character vectors of length 30:
(a) ("Label 1", "Label 2", ....., "Label 30").
word1<-paste("Label",seq(1:30),sep= )
> word1
 [1] "Label 1"  "Label 2"  "Label 3"  "Label 4"  "Label 5"  "Label 6" 
 [7] "Label 7"  "Label 8"  "Label 9"  "Label 10" "Label 11" "Label 12"
[13] "Label 13" "Label 14" "Label 15" "Label 16" "Label 17" "Label 18"
[19] "Label 19" "Label 20" "Label 21" "Label 22" "Label 23" "Label 24"
[25] "Label 25" "Label 26" "Label 27" "Label 28" "Label 29" "Label 30"

(b) ("FN1", "FN2", ..., "FN30").
> word2<-paste("FN",seq(1:30))
> word2
 [1] "FN 1"  "FN 2"  "FN 3"  "FN 4"  "FN 5"  "FN 6"  "FN 7"  "FN 8" 
 [9] "FN 9"  "FN 10" "FN 11" "FN 12" "FN 13" "FN 14" "FN 15" "FN 16"
[17] "FN 17" "FN 18" "FN 19" "FN 20" "FN 21" "FN 22" "FN 23" "FN 24"
[25] "FN 25" "FN 26" "FN 27" "FN 28" "FN 29" "FN 30"


5. Compound interest can be computed using the formula

> P<-10000
> R<-11.5/100
> n<-c(1:15)
> A=P*sum(1,R/100)^n
> A
 [1] 10011.50 10023.01 10034.54 10046.08 10057.63 10069.20 10080.78
 [8] 10092.37 10103.98 10115.60 10127.23 10138.88 10150.54 10162.21
[15] 10173.90

6) Generate the following matrices.

> vec1<-c(1:5,101:105,201:205,301:305)
> mat1<-matrix(vec1,nrow=5,ncol=4)
> mat1
     [,1] [,2] [,3] [,4]
[1,]    1  101  201  301
[2,]    2  102  202  302
[3,]    3  103  203  303
[4,]    4  104  204  304
[5,]    5  105  205  305


